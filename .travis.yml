language: c
sudo: false
git:
  submodules: false
cache:
  directories:
  - "$HOME/.cabal/packages"
  - "$HOME/.cabal/store"
before_cache:
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
- rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx
matrix:
  include:
  - compiler: ghc-8.0.2
    addons:
      apt:
        packages:
        - ghc-ppa-tools
        - cabal-install-head
        - ghc-8.0.2
        - alex
        - happy
        sources:
        - hvr-ghc
  - compiler: ghc-8.2.1
    addons:
      apt:
        packages:
        - ghc-ppa-tools
        - cabal-install-head
        - ghc-8.2.1
        - alex
        - happy
        sources:
        - hvr-ghc
before_install:
- HC=${CC}
- unset CC
- PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH
- PKGNAME='DeploymentTests'
install:
- cabal --version
- echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null ||
  echo '?')]"
- BENCH=${BENCH---enable-benchmarks}
- TEST=${TEST---enable-tests}
- travis_retry cabal update -v
- sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
- rm -fv cabal.project.local
- 'echo ''packages: .'' > cabal.project'
- rm -f cabal.project.freeze
- cabal new-build -w ${HC} ${TEST} ${BENCH} --dep -j2 all
- cabal new-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 all
script:
- if [ -f configure.ac ]; then autoreconf -i; fi
- rm -rf .ghc.environment.* dist/
- cabal sdist
- cd dist/
- SRCTAR=(${PKGNAME}-*.tar.gz)
- SRC_BASENAME="${SRCTAR/%.tar.gz}"
- tar -xvf "./$SRC_BASENAME.tar.gz"
- cd "$SRC_BASENAME/"
- rm -fv cabal.project.local
- 'echo ''packages: .'' > cabal.project'
- rm -f cabal.project.freeze
- cabal new-build -w ${HC} --disable-tests --disable-benchmarks all
- cabal new-build -w ${HC} ${TEST} ${BENCH} all
- if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} all; fi
# This is all part of the deployment process
# TODO need a script to generate this stuff
- tar -czf test.tgz `find dist-newstyle -executable -type f -name DeploymentTests`
deploy:
    provider: releases
    file: test.tgz
    skip_cleanup: true
    on:
        tags
    api_key:
      secure: QAWwP0oegib90JSrPK3ovLA3y92AB9bicnWKjQ7MMzSBSaXWnHJriAB9hr+d/MSGs9KmxRR20J6KadOLXXb8kIeFtTAi7IkuKUWaJdQ/G+NhK6iUpZZX96QpSYpnC7Qj1WlX7+3Q42AJVIA3VYJm8S7d4zEV0p4fvssLjTyXuAMju6KJXrSJPrhDDgNR7s37zh1qvvbUDIj11Uo2bH3yaSx0sWm9iYbsWyf406NT11ZT1Ypgs/mSuORL0Yo8dJxfJSaPvSNy6u+LOeJROSx0XJWk9WdwpDdEUSoTo2Lrwk6hpkTuaJThpOjtbLwj/3mKMs/185B/vcSeAdJ1yK6Lo5FunUsSG5fohqIuuP8cP+YdY4Yqvmhamim71UiyfH2Bk2Jk9bj07JYABg6ZF6tr0rrJrQzxWd4yH5GFOFBm0kw7PpNBlegakUmhOBDtlg15nsRjtmiauJG22OCB860LwyHcYgPrwIwzWboswWrOqqs3GxbsuM/zoO5QPApPLN7ooqUc6MNZmFULRlRyprI7rE5YEyN9aRS2iuRrsxuYQrYwdn9PLa6Kh5hdPK/6pjXfQZfr/Y2gpqLAz6QxGGG/RqXOiZileMy/sL+yqbV1VVmd0UWZomGquB3FHdR1pI9sjPfPd57bFExFlc/rmPz5f/0zfSyyTGc0gbCtAX0BAg8=

